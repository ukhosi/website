{"version":3,"file":"static/js/147.380a8a21.chunk.js","mappings":"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","sources":["general/pages/Landing/TalesColumn.tsx","general/pages/Landing/Articles.tsx","general/pages/Landing/Trending.tsx","general/pages/Landing/index.tsx"],"sourcesContent":["import { Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nconst TalesColumn = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant='h3'  sx={{fontWeight: 'bold'}} align='center'>\r\n        The Patriots' Section\r\n      </Typography>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default TalesColumn","import React from 'react';\r\nimport TalesColumn from './TalesColumn';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Box,\r\n    CardContent,\r\n    Typography,\r\n    CardActions,\r\n    CardMedia,\r\n    Skeleton\r\n} from '@mui/material';\r\n\r\nimport {\r\n    collection,\r\n    onSnapshot,\r\n    orderBy,\r\n    query,\r\n    deleteDoc,\r\n    doc,\r\n    limit,\r\n    DocumentData,\r\n    getDocs,\r\n    QuerySnapshot,\r\n    startAfter,\r\n    Unsubscribe,\r\n} from 'firebase/firestore';\r\nimport { db } from 'src/config/firebaseConfig';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst articleSize = 4;\r\n\r\nfunction getFirstArticlesBatch(\r\n    snapshotCallback: (querySnapshot: QuerySnapshot<DocumentData>) => void\r\n): Unsubscribe {\r\n    const q = query(\r\n        collection(db, \"Articles\"),\r\n        orderBy(\"createdAt\", \"desc\"),\r\n        limit(articleSize)\r\n    );\r\n\r\n    return onSnapshot(q, snapshotCallback);\r\n}\r\n\r\n/**\r\n * this function will be fired each time the user click on 'More Posts' button,\r\n * it receive key of last post in previous batch, then fetch next posts\r\n * starting after last fetched post.\r\n */\r\nasync function articlesNextBatch(lastDocument: any) {\r\n    const next = query(\r\n        collection(db, \"Articles\"),\r\n        orderBy(\"createdAt\", \"desc\"),\r\n        startAfter(lastDocument),\r\n        limit(articleSize)\r\n    );\r\n\r\n    const articles: any[] = [];\r\n\r\n    const documentSnapshots = await getDocs(next);\r\n\r\n    const lastVisible = documentSnapshots.docs[documentSnapshots.docs.length - 1];\r\n\r\n    documentSnapshots.forEach((doc) => {\r\n        articles.push({ id: doc.id, ...doc.data() });\r\n    });\r\n\r\n    return { articles, lastVisible };\r\n}\r\n\r\nconst Articles = () => {\r\n    const [articles, setArticles] = React.useState([]);\r\n\r\n    const [data, setData] = React.useState<any[]>([]);\r\n    const dataRef = React.useRef(data);\r\n    const [lastDocument, setLastDocument] = React.useState<any>(null);\r\n    const [fetchingData, setFetchingData] = React.useState(true);\r\n\r\n    function updateData(newData: any) {\r\n        dataRef.current = newData;\r\n        setData(newData);\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        const unsub = getFirstArticlesBatch((querySnapshot) => {\r\n            const posts: any[] = [];\r\n            querySnapshot.docChanges().forEach(({ type, doc }) => {\r\n                if (type === \"added\") posts.push({ id: doc.id, ...doc.data() });\r\n            });\r\n\r\n            if (dataRef.current.length === 0)\r\n                setLastDocument(\r\n                    querySnapshot.docChanges()[querySnapshot.docChanges().length - 1].doc\r\n                );\r\n            setFetchingData(false);\r\n            updateData([...posts, ...dataRef.current]);\r\n        });\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    async function nextDocuments() {\r\n        if (!lastDocument) return;\r\n        setFetchingData(true);\r\n        const { articles, lastVisible } = await articlesNextBatch(lastDocument);\r\n\r\n        setLastDocument(lastVisible);\r\n        setFetchingData(false);\r\n        updateData([...data, ...articles]);\r\n    }\r\n\r\n    const handleDelete = async (id: string) => {\r\n        await deleteDoc(doc(db, \"Articles\", id));\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={3}>\r\n                <Grid item lg={8} xs={12}>\r\n                    <Grid container spacing={2} sx={{ padding: '20px' }}>\r\n                        {data.map((article) => (\r\n                            <Grid xs={12} sm={12} md={6} lg={6} item key={article.id}>\r\n                                <Card sx={{ maxWidth: 345, height: '400px' }} >\r\n\r\n                                    {article ? (\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={article.title}\r\n                                            height=\"240\"\r\n                                            image={article.imageUrl}\r\n                                        />\r\n                                    ) : (\r\n                                        <React.Fragment>\r\n                                            <Skeleton variant=\"rectangular\" width={400} height={60} />\r\n                                        </React.Fragment>\r\n                                    )}\r\n                                    <CardContent sx={{ height: '80px' }}>\r\n                                        {article ? (\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                                                {article.title}\r\n                                            </Typography>\r\n                                        ) : (\r\n                                            <Skeleton animation=\"wave\" height={80} />\r\n                                        )}\r\n                                    </CardContent>\r\n                                    <CardActions>\r\n                                        {article ? (\r\n                                            <Link to={`/fake-news/${article.id}`} target='_blank' rel='noreferrer' style={{ textDecoration: 'none' }}>\r\n                                                <Button size=\"small\">Continue Reading</Button>\r\n                                            </Link>\r\n                                        ) : (\r\n\r\n                                            <Box justifyContent='center'>\r\n                                                <Skeleton animation=\"wave\" height={30} width=\"60%\" />\r\n                                            </Box>\r\n                                        )}\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                    <Box textAlign='center'>\r\n                        <Button variant='contained' onClick={nextDocuments} disabled={!lastDocument} sx={{ marginTop: '8px' }}>Load More</Button>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item lg={4} xs={12}>\r\n                    <TalesColumn />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Articles\r\n\r\n","import React from 'react';\r\nimport { Container, Typography, Card, CardMedia, CardContent} from '@mui/material';\r\nimport Slider from 'react-slick';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    collection,\r\n    query,\r\n    onSnapshot,\r\n    orderBy,\r\n    limit\r\n} from 'firebase/firestore';\r\n\r\nimport { db } from 'src/config/firebaseConfig';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\n\r\nconst Trending = () => {\r\n    const [articles, setArticles] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        const q = query(\r\n            collection(db, 'Articles'),\r\n            orderBy('createdAt', 'desc'),\r\n            limit(5)\r\n        );\r\n        const unsub = onSnapshot(q, (querySnapshot) => {\r\n            let ArticlesArray = [];\r\n            querySnapshot.forEach((doc) => {\r\n                ArticlesArray.push({ ...doc.data(), id: doc.id });\r\n            });\r\n            setArticles(ArticlesArray);\r\n        });\r\n        return () => unsub();\r\n    }, []);\r\n\r\n    const settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        slidesToShow: 2,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        speed: 1000,\r\n        autoplaySpeed: 3000,\r\n        cssEase: 'linear',\r\n        responsive: [\r\n            {\r\n                breakpoint: 1024,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                    infinite: true,\r\n                    dots: false,\r\n                },\r\n            },\r\n            {\r\n                breakpoint: 600,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                    initialSlide: 1,\r\n                },\r\n            },\r\n            {\r\n                breakpoint: 480,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Container maxWidth='lg' sx={{ padding: '10px' }}>\r\n                <Slider {...settings}>\r\n                    {articles.map((article, i) => {\r\n                        return (\r\n                            <div key={article.id}>\r\n                                 <Link to={`/fake-news/${article.id}`} target='_blank' rel='noreferrer' style={{ textDecoration: 'none' }}>\r\n                                <Card sx={{ width: '450', height: '400', backgroundColor: 'transparent', border: 'none', boxShadow: 'none' }}>\r\n                                    <CardMedia\r\n                                        component='img'\r\n                                        sx={{ objectFit: 'contain' }}\r\n                                        height='320px'\r\n                                        width='400px'\r\n                                        image={article.imageUrl}\r\n                                        alt={article.title}\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography variant='h3' color='text.secondary' align='center'>\r\n                                            {article.title}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                                </Link>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </Slider>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trending\r\n","import { Container } from '@mui/material';\r\nimport Articles from './Articles';\r\nimport Trending from './Trending';\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <div style={{  marginBottom: '20px' }}>\r\n            <Container style={{ padding: '20px' }}>\r\n                <Trending />\r\n                <Articles />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing"],"names":["Typography","variant","sx","fontWeight","align","articlesNextBatch","lastDocument","next","query","collection","db","orderBy","startAfter","limit","articles","getDocs","documentSnapshots","lastVisible","docs","length","forEach","doc","push","id","data","React","setData","dataRef","setLastDocument","setFetchingData","updateData","newData","current","unsub","snapshotCallback","q","onSnapshot","getFirstArticlesBatch","querySnapshot","posts","docChanges","type","Grid","container","spacing","item","lg","xs","padding","map","article","sm","md","Card","maxWidth","height","CardMedia","component","alt","title","image","imageUrl","Skeleton","width","CardContent","gutterBottom","animation","CardActions","to","target","rel","style","textDecoration","Button","size","Box","justifyContent","textAlign","onClick","disabled","marginTop","setArticles","ArticlesArray","Container","dots","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","cssEase","responsive","breakpoint","settings","initialSlide","i","backgroundColor","border","boxShadow","objectFit","color","marginBottom"],"sourceRoot":""}